plugins {
    id "io.ia.sdk.modl" version "0.1.1" 
}

ext {
    sdk_version = "8.1.34"
}

allprojects {
    version = "0.0.1-SNAPSHOT"
}

ignitionModule {
    name = "Example Component Library"
    fileName = "Example-Component-Library.modl"
    id = "dev.bwdesigngroup.perspective.examples.ExampleComponentLibrary"
    moduleVersion = version
    license = "LICENSE.txt"
    moduleDescription = "A module that adds Example React components to Perspective."
    requiredIgnitionVersion = "8.0.10"

    projectScopes = [
        ":gateway": "G",
        ":web": "G",
        ":designer": "D",
        ":common": "GD"
    ]

    moduleDependencies = [ "com.inductiveautomation.perspective": "GD" ]

    hooks = [
        "dev.bwdesigngroup.perspective.examples.gateway.ExampleComponentLibraryGatewayHook": "G",
        "dev.bwdesigngroup.perspective.examples.designer.ExampleComponentLibraryDesignerHook": "D"
    ]

    applyInductiveArtifactRepo = true
    skipModlSigning = !findProperty("signModule").toString().toBoolean()
}

task deepClean() {
    dependsOn allprojects.collect { "${it.path}:clean" }
    description "Executes clean tasks and remove node plugin caches."
    doLast {
        delete(file(".gradle"))
    }
}

tasks.withType(io.ia.sdk.gradle.modl.task.Deploy).configureEach {
    hostGateway = project.hostGateway
}